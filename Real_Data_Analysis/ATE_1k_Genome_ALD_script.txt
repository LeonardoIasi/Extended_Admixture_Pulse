# get genotype data from 1k G and Neandertals

cd /mnt/sequencedb/gendivdata/2_genotypes/giantVcfs/

grep 'YRI' sample_info.csv > /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/ATE_samples.txt
grep 'CEU' sample_info.csv >> /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/ATE_samples.txt
grep 'Vindija33.19' sample_info.csv >> /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/ATE_samples.txt
grep 'AltaiNeandertal' sample_info.csv >> /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/ATE_samples.txt
grep 'Chagyrskaya-Phalanx' sample_info.csv >> /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/ATE_samples.txt

cd /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD

#sed 's/\,/\t/g' ATE_samples.txt > ATE_samples.txt

sed 's/\,/\t/g' ATE_samples.txt | awk '{print $1}' > ATE_samples_filter.txt
sed 's/\,/\t/g' ATE_samples.txt | awk '{print $1, "U", $3}' > ATE_samples.ind

# ascerteinment LES
# count how many YRI
# stop_Africans=YRI+9
# start_Neandertals=YRI+9+CEU+1
# stop_Neandertals=YRI+9+CEU+1+3

#grep -o 'YRI' ATE_samples.txt | wc -l
#grep -o 'CEU' ATE_samples.txt | wc -l

#for i in {1..21};
#do
#   bcftools view  -S ATE_samples_filter.txt /mnt/sequencedb/gendivdata/2_genotypes/giantVcfs/merged_var_nosing_sites_arch_apes_sgdp1_g1000_chr${i}.vcf.gz > 1kG_AFR_EUR_NEA_vcf_chr_${i}.vcf
#done

#for i in {1..21};
#do
#  vcftools --gzvcf /mnt/sequencedb/gendivdata/2_genotypes/giantVcfs/merged_var_nosing_sites_arch_apes_sgdp1_g1000_chr${i}.vcf.gz  --keep ATE_samples_filter.txt --recode --recode-INFO-all --stdout | gzip -c > test_SubS_chr${i}.vcf.gz
#done


snakemake -s subsample_VCF_snake.py --cores 24


for i in {1..21};
do
   zcat 1kG_AFR_EUR_NEA_vcf_chr_${i}.vcf.gz  | awk 'NR>10{{for (i=10;i<=117;i++) {{if ($i!="0|0") next}}}}{{print}}'  | awk 'NR>10{{for (i=217;i<=220;i++) {{if ($i=="0/0") next}}}}{{print}}' > 1kG_AFR_EUR_NEA_vcf_chr_${i}_LES_ascertained.vcf
done

head -10 1kG_AFR_EUR_NEA_vcf_chr_1_LES_ascertained.vcf  > ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained_2.vcf

for i in {1..21};
do
   tail -n +11 1kG_AFR_EUR_NEA_vcf_chr_${i}_LES_ascertained.vcf >> ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained_2.vcf
done

### try vcf2eigenstrat (filters for biallelic sites)
cd ~/
./vcf2eigenstrat/bin/vcf2eigenstrat /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.vcf /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained

cd /mnt/diversity/leonardo_iasi/Adm_Time_Dating_Sim/Real_Data_Analysis/1k_Genomes_ALD/

# SNP_IDs and genetic distance not there (calculate genetic distance from physical distance by using a constant rate or interpolate using a map)
# This is using a constant recombination rate of 1e-8 (this provides genetic distances in M not cM!)
awk '{{print "rs"$4,$2, $3=$4*1e-8, $4, $5, $6}}' ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.snp | sed '{{s/ /\t/g}}' > ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained_corrected_constant_rr.snp

# create/change ind file

python
file=open("parfile_alder-ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained_corrected_constant_rr.txt","w")
file.write("""genotypename:\tALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.eigenstratgeno
snpname:\tALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained_corrected_constant_rr.snp
indivname:\tATE_samples.ind
admixpop:\tEUR
refpops:\tAFR,Neandertal
checkmap:\tFalse
binsize:\t1e-05
mindis:\t1e-5
maxdis:\t0.1
fast_snp_read:\tTrue
num_threads:\t4
raw_outname:\t{0}/Raw_ALDER_output-ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained_corrected_constant_rr.txt""")
file.close()
quit()


set +e
~leonardo_iasi/alder/alder -p parfile_alder-ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained_corrected_constant_rr.txt
exitcode=$?
if [ $exitcode -eq 1 ]
then
      exit 0
else
   exit 0
fi










vcftools --vcf ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.vcf --min-alleles 2 --max-alleles 2

# Conversion into plink format outputs only biallelic sites (nice)
vcftools --vcf ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.vcf --plink --out ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained



awk '$6="1"' ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.ped | sed 's/ /\t/g' > Remodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.ped
rm ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.ped
sed 's/://g' ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.map | awk '{{print $1,"rs"$2,$3,$4}}' | sed 's/ /\t/g'  > Remodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.map
rm ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.map

python

file=open("Parfile_EIGEN_conversion_hcNea_YRI_CEU_1k_G_LES_ascertained.txt","w")
file.write("""genotypename:\tRemodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.ped
snpname:\tRemodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.map
indivname:\tRemodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.ped
outputformat:\tEIGENSTRAT
genotypeoutname:\tRemodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.eigenstratgeno
snpoutname:\tRemodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.snp
indivoutname:\tRemodeled_ALL_chr_hcNea_YRI_CEU_1k_G_LES_ascertained.ind
familynames:\tNO""")
file.close()
quit()

~leonardo_iasi/EIG-master/bin/convertf -p Parfile_EIGEN_conversion_hcNea_YRI_CEU_1k_G_LES_ascertained.txt
